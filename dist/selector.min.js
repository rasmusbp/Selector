(function(e,t){typeof exports==="object"&&typeof module!=="undefined"?t(exports):typeof define==="function"&&define.amd?define(["exports"],t):t(e.StatefulSelector=e.StatefulSelector||{})})(this,function(e){"use strict";var t={NOT_EXIST:e=>`${e} --> item does not exist.`,ALREADY_EXIST:e=>`${e} --> item already exist.`,READ_ONLY:e=>`${e} --> ${e} is a read only property`,ALREADY_SELECTED:e=>`${e} --> item is already selected.`,NOT_SELECTED:e=>`${e} --> item is not selected.`,NO_TRACKBY:e=>`${e} --> action only works in track-by mode.`,INVALID_TRACKBY_ITEM:e=>`${e} --> item(s) must be objects in track-by mode.`,CHANGE:()=>`[ âˆš ] --> a potential change to current state has been applied.`};class n{constructor({message,reason,data}){Object.defineProperties(this,{message:{get:()=>message},reason:{get:()=>reason},data:{get:()=>data}})}print(e={level:""}){switch(e.level){case"throw":throw new Error(this.message);case"error":console.error(this.message,this.data);break;case"warn":console.warn(this.message,this.data);break;case"log":console.log(this.message,this.data);break;case"silent":break;default:console.log(this.message,this.data);break}return this}}const s=new WeakMap;const r="add";const o="remove";const i="select";const c="deselect";class a{constructor(e={items:[],selected:[]},r){const o=new Map;const i={onChanges:new Set,onErrors:new Set};const c=Object.assign({trackBy:undefined,strict:false,debug:false,validators:[()=>true],providers:Object.assign({Log:n},r.providers)},r);c.logLevel=c.strict?"error":"warn";const a=({reason:reason,data:data,context="Selector"})=>{const e=t[reason]||(()=>"null");const n=c.providers.Log;return new n({message:`Selector@${e(context)}`,reason:reason,data:data})};const u=e=>{i.onChanges.forEach(t=>{t(this.state,e,this)})};const f=e=>{i.onErrors.forEach(t=>{t(e,this.state,this)})};const l=(e,t,n)=>{if(e.hasErrors){f(n);if(c.strict)return}if(e.hasChanges){u(t);if(c.debug){a({reason:"CHANGE",data:{errors:n,changes:t,state:this.state},context:"change"}).print({level:"log"})}}};const h=e=>{const t=o.get(b(e));return t&&!t.filtered?t.value:undefined};const g=e=>{const t=o.get(b(e));return t&&t!==0&&!t.filtered};const d=e=>{const t=o.get(b(e));return t&&t!==0&&t.selected&&!t.filtered};const p=(e,t)=>{const{trackBy}=c;return e.reduce((e,n)=>{const s=b(n);const r=o.get(s);if(r){Object.assign(r,t);return[...e,r.value]}else{const r=Object.assign({value:n},t);if(trackBy){r.key=s}o.set(s,r);return[...e,n]}},[])};const E=e=>{return e.map(e=>{o.delete(b(e));return e})};const v=e=>{const t={value:e.value,selected:e.selected};if(e.key){t.key=e.key}return t};const y=(e,t=c.logLevel)=>{if(e.length&&(c.strict||c.debug)){e.forEach(e=>e.print({level:t}))}};const C={all:{validate:e=>e},existing:{validate:h},adding:{iterator(e,t,n){return n(e,t)},validate(e,t){if(g(e)){return a({reason:"ALREADY_EXIST",data:e,context:t})}else{return e}}},getting:{validate(e,t){return g(e)?h(e):a({reason:"NOT_EXIST",data:e,context:t})}},selecting:{validate(e,t){if(!g(e)){return a({reason:"NOT_EXIST",data:e,context:t})}else if(d(e)){return a({reason:"ALREADY_SELECTED",data:h(e),context:t})}else{return h(e)}}},deselecting:{validate(e,t){if(!g(e)){return a({reason:"NOT_EXIST",data:e,context:t})}else if(!d(e)){return a({reason:"NOT_SELECTED",data:h(e),context:t})}else{return h(e)}}}};const S=(e,t)=>{if(typeof e==="function"){if(t){const{initialState}=s.get(this);return t(this.state,initialState,e)}else{const t=[];for(let[n,s]of o){if(s.filtered)continue;if(e(s)===true){t.push(s.value)}}return t}}else if(Array.isArray(e)){return e}else{return[e]}};const m=(e,t)=>{if(!t)return e;if(t instanceof c.providers.Log){e.errors.push(t)}else{e.hits.push(t)}return e};const A=(e,t,n)=>{const s=S(t,e.iterator);const r={hits:[],errors:[]};return s.reduce((t,s)=>{return m(t,e.validate(s,n))},r)};const b=e=>{const{trackBy}=c;if(!trackBy||typeof e!=="object"&&e!==null){return e}if(typeof trackBy==="function"){return trackBy(e)}return e[trackBy]};const T=e=>{if(Array.isArray(e)){return{items:e.slice(),selected:[]}}return{items:Array.isArray(e.items)?e.items.slice(0):e.items,selected:Array.isArray(e.selected)?e.selected.slice(0):e.selected}};const L=()=>{return Array.from(o.values()).reduce((e,t)=>{if(t.filtered)return e;if(t.selected){e.selected.push(t.value)}e.items.push(t.value);return e},{items:[],selected:[]})};const _=()=>{s.get(this).currentState=L()};s.set(this,{log:y,config:c,resolverFor:C,subscribers:i,resolveInput:S,resolveKey:b,resolveItemsWith:A,createLog:a,createStateObject:T,getPredicateArgs:v,stateMap:o,has:g,get:h,addToStateMap:p,removeFromStateMap:E,isSelected:d,dispatch:l,updateCurrentState:_,currentState:{items:[],selected:[]}});this.setState(e);s.get(this).initialState=L()}revert(e){return this.applyChange({[r]:e[o],[o]:e[r],[i]:e[c],[c]:e[i]})}subscribe(e,t){const{subscribers}=s.get(this);const{onChanges,onErrors}=subscribers;onChanges.add(e);if(t){onErrors.add(t)}return()=>{onChanges.delete(e);onErrors.delete(t);return this}}select(e){return this.applyChange({[i]:e})}deselect(e){return this.applyChange({[c]:e})}invert(){return this.toggle(this.state.items)}toggle(e){const{resolveInput,isSelected}=s.get(this);const t=resolveInput(e);const n=t.reduce((e,t)=>{if(isSelected(t)){e[c].push(t)}else{e[i].push(t)}return e},{[i]:[],[c]:[]});return this.applyChange(n)}add(e){return this.applyChange({[r]:e})}remove(e){return this.applyChange({[o]:e})}reset(){const{initialState}=s.get(this);console.log(initialState);return this.setState(initialState)}filter(e){const{stateMap,dispatch,updateCurrentState,getPredicateArgs}=s.get(this);let t=false;const n={[r]:[],[o]:[],[i]:[],[c]:[]};stateMap.forEach((s,a)=>{const u=e(getPredicateArgs(s));if(u===true&&s.filtered){t=true;s.filtered=false;n[r].push(s.value);if(s.selected){n[i].push(s.value)}}else if(u===false&&!s.filtered){t=true;s.filtered=true;n[o].push(s.value);if(s.selected){n[c].push(s.value)}}});updateCurrentState();dispatch({hasChanges:t,hasErrors:false},n,[]);return this}some(e){const{stateMap,getPredicateArgs}=s.get(this);let t=false;for(let[n,r]of stateMap){if(r.filtered)continue;if(e(getPredicateArgs(r))===true){t=true;break}}return t}every(e){const{stateMap,getPredicateArgs}=s.get(this);let t=true;for(let[n,r]of stateMap){if(r.filtered)continue;const n={value:r.value,selected:r.selected};if(e(getPredicateArgs(r))!==true){t=false;break}}return t}isSelected(e){const{resolveItemsWith,resolverFor,isSelected,log}=s.get(this);const{hits,errors}=resolveItemsWith(resolverFor.getting,e,"isSelected");log(errors,"warn");return!!hits.length&&hits.every(isSelected)}has(e){const{resolveItemsWith,resolverFor,has}=s.get(this);const{hits,errors}=resolveItemsWith(resolverFor.all,e);return!!hits.length&&hits.every(has)}swap(e,t){const{config,log,createLog,resolveItemsWith,resolverFor,resolveKey,isSelected,updateCurrentState,stateMap,dispatch}=s.get(this);const{hits,errors}=resolveItemsWith(resolverFor.getting,e,"swapping");let n=false;if(errors.length){n=true;log(errors)}const a=hits[0];const u=resolveKey(a);const f=isSelected(a);let l=false;if(!n){l=true;stateMap.set(u,{value:t,selected:f})}updateCurrentState();dispatch({hasChanges:l,hasErrors:n},{[r]:[t],[i]:f?[t]:[],[c]:f?[a]:[],[o]:[a]},errors);return this}setState(e){const{createStateObject,currentState}=s.get(this);const{items,selected}=createStateObject(e);return this.applyChange({[o]:currentState.items,[r]:items,[i]:selected})}applyChange(e){const{log,addToStateMap,removeFromStateMap,config,dispatch,resolveItemsWith,resolverFor,updateCurrentState}=s.get(this);const t=[o,r,c,i];const n=t.reduce((t,n)=>{if(!e[n]&&e[n]!==0){return t}const s={[o]:()=>{const{hits,errors}=resolveItemsWith(resolverFor.getting,e[o],o);log(errors);t.errors.push(...errors);t.hasErrors=t.hasErrors||!!errors.length;if(!(t.hasErrors&&config.strict)){hits.forEach(e=>{if(this.isSelected(e)){t.changes[c].push(e)}})}const n=!(t.hasErrors&&config.strict)?removeFromStateMap(hits):[];t.hasChanges=t.hasChanges||!!n.length;t.changes[o]=n},[r]:()=>{const{hits,errors}=resolveItemsWith(resolverFor.adding,e[r],r);log(errors);t.errors.push(...errors);t.hasErrors=t.hasErrors||!!errors.length;const n=!(t.hasErrors&&config.strict)?addToStateMap(hits,{selected:false,filtered:false}):[];t.hasChanges=t.hasChanges||!!n.length;t.changes[r]=n},[c]:()=>{const{hits,errors}=resolveItemsWith(resolverFor.deselecting,e[c],c);log(errors);t.errors.push(...errors);t.hasErrors=t.hasErrors||!!errors.length;const n=!(t.hasErrors&&config.strict)?addToStateMap(hits,{selected:false}):[];t.hasChanges=t.hasChanges||!!n.length;t.changes[c].push(...n)},[i]:()=>{const{hits,errors}=resolveItemsWith(resolverFor.selecting,e[i],i);log(errors);t.errors.push(...errors);t.hasErrors=t.hasErrors||!!errors.length;const n=!(t.hasErrors&&config.strict)?addToStateMap(hits,{selected:true}):[];t.hasChanges=t.hasChanges||!!n.length;t.changes[i]=n}};s[n]();return t},{hasChanges:false,hasErrors:false,changes:{[r]:[],[i]:[],[c]:[],[o]:[]},errors:[]});updateCurrentState();const{hasChanges,hasErrors}=n;dispatch({hasChanges:hasChanges,hasErrors:hasErrors},n.changes,n.errors);return this}get state(){const{currentState}=s.get(this);return currentState}get isValid(){const{validators}=s.get(this).config;return validators.every(e=>e(this.state,this))}}function u(e,t={}){return new a(e,t)}var f={createSelector:u};e.createSelector=u;e["default"]=f;Object.defineProperty(e,"__esModule",{value:true})});